# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build and Deploy ROOT.war

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 소스코드 체크아웃
    - name: Checkout source code
      uses: actions/checkout@v2

    # JDK 17 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # application.yml 파일 불러오기
    - name: Set application.yml from secrets
      run: |
        cat <<'EOF' > src/main/resources/application.yml
        ${{ secrets.APPLICATION_YML }}
        EOF

    # Gradle 빌드
    - name: Build with Gradle
      run: ./gradlew clean build

    # 빌드된 war 파일을 ROOT.war로 이름 변경
    - name: Rename WAR file
      run: mv build/libs/*.war ROOT.war

    # ROOT.war 파일을 우분투 서버에 전송
    - name: Deploy ROOT.war to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        source: "ROOT.war"
        target: "~/CICD/ROOT.war"

    # 서버에서 docker-compose를 통해 tomcat 컨테이너를 재시작
    - name: Restart Tomcat Container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          cd /home/admin/nginx-https
          docker-compose restart tomcat
